<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAE4SURBVFhH1Zdd
        DoIwDMcXr8q6M/DooxrUG3g67lFTYQPaDQsIjQ+/hGz9+MPWsjlEdILz+YQVXNBDiz7UYl4L+VIMikUx
        +TyiEwMfQx9e6AETFIDbfaN7gSEGxcyImDrlkkcArty5CNly/4IIXfIhwE0k45CN8CuLWJA84huRNCX3
        jbTPMYhYmLyngrtITmPcbpZORGazKAF4pOT0zOc1VHBxXallJlWEZwcfV9PGWuUTBxHquH7rlmELfW8Z
        NlGxdndg1FNYGX2r4V8w7SVTAR8R2lpeg+whUgCxuKYV5HpHUQCxtrZzjHuGWgCxrcZ7wlPE/Q8Bpktg
        uglNy9C0EZm2YtOfkfnv2PxAsvbz/+xIZn4oJedFImQtJ9Q9ZHwsj84qEXtdTDQidr+azYk47HIaIcOD
        rudv1lEcfuLTPHcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="grabar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAJ
        ZAAACWQB4tiLFwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAGuSURBVFhH7da9
        SwJxHMdxp/4EF5uCoCDac6shyCEiuIowMQSzhjKEWiqFCoKGrKAlGtqiIYqg8rwug0TsAalBeiAKTFLv
        lKRIhOIbZyB6vzvP+3WJwx28x7vPi+90mlaDeavNYAZ+Xp8fXtlkUeH7OwicB2TVa7L/frNjcI8giBoA
        0BSmkQOIxhMQvAwiI6XKA0QQsgClrmDotkJ7pyXfIUmiAAGEbIDYFbjR8ck5cM27c+8fiAF4CNkAsStw
        gOW1Ddje2ZUGFCCwAEJXkA3IIcxLWAChK+AAuG1sQDRRfAUOMGyfgYmphcoA+FfoH3RAj8mez0NR/w/g
        X0EobMD+EQ2RWFyyq+sb8NK0aIRxDPl2WYBKpAJUQPUCVhdtsO4eUrQ+o6V8QPy4ARhSq2izThseIOXX
        w9tFV1HJ02ZkQCo8AKWD78wL8J8s40UGpMIDkFpg6TpI+pqKYqlaZEAqbMB72AGfTyuCpUMDwNL1kA6Z
        kEF+eABKB1mGgq+PB8EykU1InbVANuFBBvnhARRMFiDm0wNz0qhorumR8gG3j8/Iz8dfs446VYAKqE7A
        D02XUU2OiCrfAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="imprime.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        4wAAAOMBD+bfpwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAHvSURBVFhH7ZdN
        SwJBGMf/QcJ20YRc7FSRR5VWC3v5AEUH69Cx6FIWBBIU0dEizKIwOiRBBVZoUR+gc0EQfp0C8+DEI6Po
        uK3rvtTFww9k99nn/2PW2ZkBYwxqAHBLUs8bgDIAumCEsiRJrwB6xf61HPFCnUDc6+0vJg+PWeroxBD0
        rMcjFwGsi/31CKQikfFS/vGZmWFEUUggIfbvCHQEVAUAOGnKcNLh0bHS9U2WmSEQDJJAqq6vs0kAQBTA
        u8o8tosPAAs8u2L1CWADwBCAQZuhDMr64tmIkZH4buyGj8Ia/dgF8FJ3owtAt/iA1VAmz24SWAFwJj5g
        Nb8K8Jv/NwJ/hS4BADIAr0lksa8uAT47xPlrlJhK/5YCKb8/8J25vGJmCIXCJeql0r+1AH3HxW97u9B6
        YplAYu+AbW3vaEI1tghk73Js2OdjfR6PJlRDtZYLGEWPwCqAgkqB3QIFng0XXw03+Uo1wLlQlFBN4PY+
        z6ZnZtnE5JQmVEO1gkBGWA0pizJdVRvV/UC9QO7hiS0uLbPo3LwmVEO1gkBDX54VrWQLw9KwI7LwFaQ1
        d0Rq2P0faFuAppYsy8zhcGhCNXqmYdsCxGn6nO0fJDWhGltGwChmBOJ0sDR7OKUDLvUS++sRcPOjtRXH
        c7fYv8oP1w/Mg6B1GukAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>78</value>
  </metadata>
</root>